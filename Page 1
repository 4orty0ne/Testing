<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Maintenance Report</title>
    <style>
        body {
            background-color: #f0f4f8;
            margin: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
            height: 100vh;
            font-family: 'Arial', sans-serif;
            padding: 14.4px;
        }
        h1 {
            text-align: center;
            font-size: 2em;
            margin-bottom: 20px;
            color: #4a4a4a;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-weight: bold;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
        }
        .boxes-container {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            width: 100%;
            margin-bottom: 10px;
        }
        .container {
            width: 90%;
            max-width: 259.2px;
            height: 649.5px; /* Decreased by 10% */
            border-radius: 10px;
            background-color: #ffffff;
            padding: 14.4px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            margin: 10px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            transition: transform 0.3s;
        }
        .container:hover {
            transform: scale(1.02);
        }
        h2 {
            color: #4a4a4a;
            margin-bottom: 7.2px;
            text-align: center;
            font-size: 0.945em;
            font-weight: bold;
        }
        ul {
            list-style-type: none;
            padding: 0;
            flex-grow: 1;
            overflow-y: hidden;
        }
        li {
            background-color: #f9f9f9;
            margin: 3.6px 0;
            padding: 7.2px;
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: background-color 0.3s;
        }
        li:hover {
            background-color: #e0e0e0;
        }
        .status-button {
            width: 63.5px;
            padding: 6.3px 0;
            border: none;
            border-radius: 3.6px;
            cursor: pointer;
            font-size: 0.72em;
            transition: background-color 0.3s;
        }
        .pending { background-color: #d3d3d3; color: #000; }
        .complete { background-color: #5cb85c; color: #fff; }
        .incomplete { background-color: #d9534f; color: #fff; }
        .next-button {
            padding: 12px 16px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1em;
            transition: background-color 0.3s, transform 0.2s;
            margin-top: 40px;
            box-shadow: 0 4px 8px rgba(0, 123, 255, 0.2);
        }
        .next-button:hover {
            background-color: #0056b3;
            transform: scale(1.05);
        }
        .circle {
            width: 14.2px; /* Increased by 15% */
            height: 14.2px; /* Increased by 15% */
            border-radius: 50%;
            margin: 0 5px;
            cursor: pointer;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            transition: transform 0.2s, box-shadow 0.2s;
        }
        .grey { background-color: #404040; }
        .green { background-color: #5cb85c; }
        .red { background-color: #d9534f; }
        .circle-container {
            display: flex;
            justify-content: center;
            margin-top: 10px; /* Spacing below boxes */
        }
    </style>
</head>
<body>
    <h1>Maintenance Report</h1>
    <div class="boxes-container">
        <div class="container">
            <h2>Sensors Maintenance</h2>
            <ul>
                <li>
                    Clean Sensor 1
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Sensor 2
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Sensor 3
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Sensor 4
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Sensor 5
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Sensor 6
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Sensor 7
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Sensor 8
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Sensor 9
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Sensor 10
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Sensor 11
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Sensor 12
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Sensor 13
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
            </ul>
            <div class="circle-container">
                <div class="circle grey" onclick="setSectionStatus(this, 'pending')"></div>
                <div class="circle green" onclick="setSectionStatus(this, 'complete')"></div>
                <div class="circle red" onclick="setSectionStatus(this, 'incomplete')"></div>
            </div>
        </div>

        <div class="container">
            <h2>Air Filters Maintenance</h2>
            <ul>
                <li>
                    Clean Air Filter 1
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Air Filter 2
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Air Filter 3
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Air Filter 4
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Air Filter 5
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Air Filter 6
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Air Filter 7
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Air Filter 8
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Air Filter 9
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Clean Air Filter 10
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
            </ul>
            <div class="circle-container">
                <div class="circle grey" onclick="setSectionStatus(this, 'pending')"></div>
                <div class="circle green" onclick="setSectionStatus(this, 'complete')"></div>
                <div class="circle red" onclick="setSectionStatus(this, 'incomplete')"></div>
            </div>
        </div>

        <div class="container">
            <h2>Battery Maintenance</h2>
            <ul>
                <li>
                    Battery Equalization
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
                <li>
                    Battery Realignment
                    <button class="status-button pending" onclick="toggleStatus(this)">Pending</button>
                </li>
            </ul>
            <div class="circle-container">
                <div class="circle grey" onclick="setSectionStatus(this, 'pending')"></div>
                <div class="circle green" onclick="setSectionStatus(this, 'complete')"></div>
                <div class="circle red" onclick="setSectionStatus(this, 'incomplete')"></div>
            </div>
        </div>
    </div>

    <div class="circle-container">
        <div class="circle grey" onclick="setAllSectionsStatus('pending')"></div>
        <div class="circle green" onclick="setAllSectionsStatus('complete')"></div>
        <div class="circle red" onclick="setAllSectionsStatus('incomplete')"></div>
    </div>

    <button class="next-button" onclick="handleNext()">Next</button>

    <script>
        function toggleStatus(button) {
            const statuses = ["Pending", "Complete", "Incomplete"];
            const currentStatus = button.textContent;
            const nextIndex = (statuses.indexOf(currentStatus) + 1) % statuses.length;
            button.textContent = statuses[nextIndex];

            // Update button class for styling
            button.className = "status-button " + statuses[nextIndex].toLowerCase();

            // Update button background color based on status
            if (statuses[nextIndex] === "Pending") {
                button.style.backgroundColor = "#d3d3d3"; // Light Grey
                button.style.color = "#000";
            } else if (statuses[nextIndex] === "Complete") {
                button.style.backgroundColor = "#5cb85c"; // Green
                button.style.color = "#fff";
            } else {
                button.style.backgroundColor = "#d9534f"; // Red
                button.style.color = "#fff";
            }
        }

        function setSectionStatus(circle, status) {
            const buttons = circle.closest('.container').querySelectorAll('.status-button');
            buttons.forEach(button => {
                button.textContent = status.charAt(0).toUpperCase() + status.slice(1);
                button.className = "status-button " + status;
                if (status === "pending") {
                    button.style.backgroundColor = "#d3d3d3"; // Light Grey
                    button.style.color = "#000";
                } else if (status === "complete") {
                    button.style.backgroundColor = "#5cb85c"; // Green
                    button.style.color = "#fff";
                } else {
                    button.style.backgroundColor = "#d9534f"; // Red
                    button.style.color = "#fff";
                }
            });
        }

        function setAllSectionsStatus(status) {
            const buttons = document.querySelectorAll('.status-button');
            buttons.forEach(button => {
                button.textContent = status.charAt(0).toUpperCase() + status.slice(1);
                button.className = "status-button " + status;
                if (status === "pending") {
                    button.style.backgroundColor = "#d3d3d3"; // Light Grey
                    button.style.color = "#000";
                } else if (status === "complete") {
                    button.style.backgroundColor = "#5cb85c"; // Green
                    button.style.color = "#fff";
                } else {
                    button.style.backgroundColor = "#d9534f"; // Red
                    button.style.color = "#fff";
                }
            });
        }

        function handleNext() {
            const buttons = document.querySelectorAll('.status-button');
            const pendingItems = [];
            buttons.forEach(button => {
                if (button.textContent === "Pending" || button.textContent === "Incomplete") {
                    pendingItems.push(button.parentElement.textContent.trim());
                }
            });
            localStorage.setItem('pendingItems', JSON.stringify(pendingItems));

            if (pendingItems.length > 0) {
                window.location.href = "Page 2.html";
            } else {
                window.location.href = "Page 3.html";
            }
        }
    </script>
</body>
</html>
